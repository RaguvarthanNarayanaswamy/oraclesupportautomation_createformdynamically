<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.In_Flag_Testing="False" this:Main.In_Dynamic_CreateFormTaskFlow="Framework\ActionCenter_CreateFormTask.xaml" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_Flag_Testing" Type="InArgument(x:Boolean)" />
    <x:Property Name="In_Dynamic_CreateFormTaskFlow" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>573,3006</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="468,1282" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String,String)]" Name="dict_ReadTemplates" />
      <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="taskTitle" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="listArguments" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dict_Forms">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="New Dictionary(Of String,String)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="list_Elements" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="list_FormSequence">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="New List(Of String)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="result_GeneratedFormSequences">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Empty" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="result_NewDynamicXAML">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Empty" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Init" sap:VirtualizedContainerService.HintSize="426,401" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\Read_XMLTemplates.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="In_Folderpath_Templates">Asserts\XML Templates</InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Out_Dict_ReadTemplates">[dict_ReadTemplates]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[taskTitle]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Sample Task 1</InArgument>
        </Assign.Value>
      </Assign>
      <If sap2010:Annotation.AnnotationText="Testing" Condition="[In_Flag_Testing]" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="242,238" sap2010:WorkflowViewState.IdRef="Sequence_29">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="Test-Elements.txt" />
            <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_2" Path="Test-Form.txt" />
            <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_3" Path="Test-FormSequence.txt" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="426,66" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Generate Elements" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Default="False" Name="flag_Exception_Element" />
          <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="exceptionMessage_Element" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Text Field" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="With Variable" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="346,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_TextField.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_FieldName">Name</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">[flag_Exception_Element]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">[exceptionMessage_Element]</OutArgument>
              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_Elements">[list_Elements]</InOutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">[dict_ReadTemplates]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Required">False</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <AddToCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Add argument - In - With Variable" Collection="[listArguments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="346,64" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="In|Name|NameData|true">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </AddToCollection>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Without variable" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="346,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_TextField.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_FieldName">Name</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">[flag_Exception_Element]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">[exceptionMessage_Element]</OutArgument>
              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_Elements">[list_Elements]</InOutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">[dict_ReadTemplates]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Required">False</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <AddToCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Add argument - In - Without variable" Collection="[listArguments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="346,64" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="In|Age|30|false">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </AddToCollection>
        </Sequence>
        <Sequence DisplayName="Text Field - Editable" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_TextField_Editable .xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_FieldName">New Name</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">[flag_Exception_Element]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">[exceptionMessage_Element]</OutArgument>
              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_Elements">[list_Elements]</InOutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">[dict_ReadTemplates]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Required">False</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <AddToCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Add argument - Out" Collection="[listArguments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="379,53" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="Out|New Name|NameEdited">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </AddToCollection>
        </Sequence>
        <Sequence DisplayName="Number Field" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="369,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_NumberField.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_FieldName">
                <Literal x:TypeArguments="x:String">Phone Number</Literal>
              </InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">
                <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="flag_Exception_Element" />
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">
                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="exceptionMessage_Element" />
              </OutArgument>
              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_Elements">
                <mva:VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="list_Elements" />
              </InOutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">
                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dict_ReadTemplates" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Key">
                <Literal x:TypeArguments="x:String">phonenumber</Literal>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
        <Sequence DisplayName="Button" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Comment sap:VirtualizedContainerService.HintSize="336,74" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Button Themes - Primary, Secondary, Info, Success, Danger &amp; Warning" />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Generate Button" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="336,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_Button.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_FieldName">Submit</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Key">submit</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Theme">Primary</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">[flag_Exception_Element]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">[exceptionMessage_Element]</OutArgument>
              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_Elements">[list_Elements]</InOutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">[dict_ReadTemplates]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </Sequence>
        <Sequence DisplayName="Check Box" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_CheckBox.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_FieldName">Accept terms</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Key">acceptterms</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">[flag_Exception_Element]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">[exceptionMessage_Element]</OutArgument>
              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_Elements">[list_Elements]</InOutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">[dict_ReadTemplates]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_DefaultValue">False</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
        <Sequence DisplayName="Drop Down" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="357,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_DropDown.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_FieldName">Gender</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Key">gender</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">[flag_Exception_Element]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">[exceptionMessage_Element]</OutArgument>
              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_Elements">[list_Elements]</InOutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">[dict_ReadTemplates]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_Required">true</InArgument>
              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="In_FieldValues">[{"Male","Female"}.ToList]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
        <If sap2010:Annotation.AnnotationText="Testing" Condition="[In_Flag_Testing]" sap:VirtualizedContainerService.HintSize="200,82" sap2010:WorkflowViewState.IdRef="If_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[list_Elements]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,224" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AppendLine DisplayName="Append Line" FileName="Test-Elements.txt" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[item+vbNewLine+vbNewLine+vbNewLine+vbNewLine+vbNewLine]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Generate Form" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Default="False" Name="flag_Exception_Form" />
          <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="exception_Form" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_Form.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">
              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="flag_Exception_Form" />
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">
              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="exception_Form" />
            </OutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">
              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dict_ReadTemplates" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="In_TaskTitle">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="taskTitle" />
            </InArgument>
            <InArgument x:TypeArguments="scg:List(x:String)" x:Key="In_ListArguments">
              <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="listArguments" />
            </InArgument>
            <InArgument x:TypeArguments="scg:List(x:String)" x:Key="In_ListXMLElements">
              <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="list_Elements" />
            </InArgument>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="IO_Dict_Forms">
              <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dict_Forms" />
            </InOutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <If sap2010:Annotation.AnnotationText="Testing" Condition="[In_Flag_Testing]" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="349,369" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="307,277" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dict_Forms.Values]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AppendLine DisplayName="Append Line" FileName="Test-Form.txt" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="[item+vbNewLine+vbNewLine+vbNewLine+vbNewLine+vbNewLine]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AppendLine>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Generate Form Sequence" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_34">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Default="False" Name="flag_Exception_Form" />
          <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="exception_Form" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="457,313" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[dict_Forms.Keys]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="421,179" sap2010:WorkflowViewState.IdRef="Sequence_35">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\XMLElementGenerator_FormSequence.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Flag_Exception">
                      <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="flag_Exception_Form" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Out_ExceptionMessage">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="exception_Form" />
                    </OutArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="In_Dict_ReadTemplates">
                      <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dict_ReadTemplates" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_TaskTitle">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="taskTitle" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_FormTemplate">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dict_Forms(item)" />
                    </InArgument>
                    <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="IO_List_FormSequence">
                      <mva:VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="list_FormSequence" />
                    </InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <Assign sap:VirtualizedContainerService.HintSize="457,60" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[result_GeneratedFormSequences]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[String.Join(vbNewLine,list_FormSequence)]</InArgument>
          </Assign.Value>
        </Assign>
        <If sap2010:Annotation.AnnotationText="Testing" Condition="[In_Flag_Testing]" sap:VirtualizedContainerService.HintSize="457,82" sap2010:WorkflowViewState.IdRef="If_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="454,450" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,358" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[list_FormSequence]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,224" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AppendLine DisplayName="Append Line" FileName="Test-FormSequence.txt" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_3" Text="[item+vbNewLine+vbNewLine+vbNewLine+vbNewLine+vbNewLine]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AppendLine>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Exit" sap:VirtualizedContainerService.HintSize="426,643" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="readXAML" />
        <Variable x:TypeArguments="x:String" Name="strFirstHalf">
          <Variable.Default>
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Empty" />
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:String" Name="strSecondHalf">
          <Variable.Default>
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Empty" />
          </Variable.Default>
        </Variable>
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadTextFile Content="[readXAML]" DisplayName="Read Text File" FileName="[In_Dynamic_CreateFormTaskFlow]" sap:VirtualizedContainerService.HintSize="384,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strFirstHalf]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[readXAML.Split(New String() {"&lt;/Sequence&gt;"+vbNewLine+"    &lt;Sequence DisplayName=""Exit"""},StringSplitOptions.RemoveEmptyEntries).First]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSecondHalf]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;/Sequence&gt;"+vbNewLine+"    &lt;Sequence DisplayName=""Exit"""+readXAML.Split(New String() {"&lt;/Sequence&gt;"+vbNewLine+"    &lt;Sequence DisplayName=""Exit"""},StringSplitOptions.RemoveEmptyEntries).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[result_NewDynamicXAML]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[strFirstHalf+vbNewLine+result_GeneratedFormSequences+vbNewLine+strSecondHalf]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="Result.xaml" sap:VirtualizedContainerService.HintSize="384,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[result_NewDynamicXAML]" />
    </Sequence>
  </Sequence>
</Activity>